{"version":3,"sources":["vmap.js"],"names":["Map","div","document","getElementById","width","height","zoom","canvas","createElement","appendChild","context","getContext","translate","style","backgroundColor","maxLng","minLng","maxLat","minLat","prototype","showMap","map","log","getPosition","data","innerHTML","lng","lat","ajax","pointUrl","features","i","length","feature","geometry","type","properties","name","drawPolygon","drawLine","drawPoint","drawText","XMLHttpRequest","textStatus","errorThrown","zoomToEvent","bounds","setCanvas","callback","getBoundingClientRect","addEventListener","getLngLat","e","x","y","window","event","clientX","body","scrollLeft","documentElement","left","clientY","scrollTop","top","lnglat","xy2LngLat","lngLat2XY","Point","size","addPoint","point","xy","fillStyle","beginPath","cxy","changePosition","arc","Math","PI","closePath","fill","image","Image","src","onload","drawImage","geo_point","coordinates","MultiPoint","pointArr","addMultiPoint","drawMultiPoint","geo_multiPoint","Line","point1","point2","addLine","line","startPoint","xy1","strokeStyle","lineWidth","fxy","moveTo","mxy","nxy","lineTo","stroke","geo_line","addPolygon","polygon","geo_polygon","addText","text","font","fillText","zoomTo","clearRect","moveToLeft","offsetLeft","moveToRight","offsetRight","panTo","_this","currentZoom","scorll","getScorll","wheelDelta","getStyle"],"mappings":"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","file":"vmap.3e209025.map","sourceRoot":"..","sourcesContent":["\n\nvar Map = function(div) {\n\tvar div = document.getElementById(div);\n\tthis.width = 600;\n\tthis.height = 400;\n\tthis.zoom = 100; //缩放默认为100\n\tif(div){\n\t\tthis.div = div;\n\t\t// this.width = parseInt(div.style.width);\n\t\t// this.height = parseInt(div.style.height);\n\t\tthis.canvas = document.createElement(\"canvas\"); //创建canvas标签\n\t\tthis.div.appendChild(this.canvas); //添加canvas标签\n\t\tthis.canvas.width = this.width; //设置canvas大小\n\t\tthis.canvas.height = this.height; //设置canvas大小\n\t\tthis.context = this.canvas.getContext(\"2d\"); //获取绘图环境\n\t\tthis.context.translate(this.width/2,this.height/2);//将中心放到画布中心\n\t\tthis.canvas.style.backgroundColor = '#F5F3EF';\n\t}\n\t//this.maxLng = 116.495032; \n\t//this.minLng = 116.46203;   \n\t//this.maxLat = 40.005856;\n\t//this.minLat = 39.988136;\n\t\n\tthis.maxLng = 135; \n\tthis.minLng = 72;   \n\tthis.maxLat = 55;\n\tthis.minLat = 5;\n};\n\nMap.prototype.showMap = function(map){\n\tconsole.log(map)\n\t\n\tmap.getPosition(function(data){\n\t\tdocument.getElementById('show_lnglat').innerHTML = '当前经纬度为:' + data.lng + ',' + data.lat;\n\t});\n\n//-------------------------------合成一个服务--------------------------------------\n\t// 作为一个服务绘制\n   \t//var pointUrl='http://localhost:3000/wangjing/get';\n\tvar pointUrl='http://localhost:3000/province';\n   \t$.ajax({\n\t     url:pointUrl,\n\t     data:'',\n\t     dataType:'jsonp',\n\t     processData: false, \n\t     type:'get',\n\t     success:function callback(data){\n\t     \tvar features = data.features;\n\t\t\tconsole.log(data);\n\t     \tfor(var i = 0; i <features.length; i++){\n\t     \t\tvar feature = features[i];\n\t     \t\tif(feature.geometry.type == 'Polygon'){\n\t     \t\t\tif(feature.properties.name == 'lvdi')\n\t     \t\t\t\tmap.drawPolygon(feature,'#C2E0B9','#C2E0B9');\n\t     \t\t\tif(feature.properties.name == 'gonglu')\n\t     \t\t\t\tmap.drawPolygon(feature,'#FFC65C','#FFC65C');\n\t     \t\t}\n\n\t     \t\tif(feature.geometry.type == 'LineString'){\n\t     \t\t\tif(feature.properties.name == 'ditie')\n\t     \t\t\t\tmap.drawLine(feature, '#F95A7A');\n\t     \t\t}\n\t     \t\t\n\t     \t\tif(feature.geometry.type == 'Point'){\n\t     \t\t\tmap.drawPoint(feature);\n\t     \t\t}\n\n\t     \t\tif(feature.geometry.type == 'Point'){\n\t     \t\t\tmap.drawText(feature);\n\t     \t\t}\n\t     \t}\n\t     },\n     \terror:function(XMLHttpRequest, textStatus, errorThrown) {\n       \t\tconsole.log(XMLHttpRequest);\n     }});\n//---------------------------------------------------------------------------------------\n   \tmap.zoomToEvent();\n}\n/*\n+----------------------------\n+ 设置地图边界\n+----------------------------\n*/\nMap.prototype.bounds = function(maxLng, minLng, maxLat, minLat){\n\t//this.maxLng = maxLng || 116.495032;\n\t//this.minLng = minLng || 116.46203;\n\t//this.maxLat = maxLat || 40.005856;\n\t//this.minLat = minLat || 39.988136;\n\t\n\tthis.maxLng = maxLng || 135;\n\tthis.minLng = minLng || 72;\n\tthis.maxLat = maxLat || 55;\n\tthis.minLat = minLat || 5;\n}\n/*\n+----------------------------\n+ 设置canvas大小\n+----------------------------\n*/\nMap.prototype.setCanvas = function(canvas){\n\tcanvas.width = this.width;\n\tcanvas.height = this.height;\n}\n/*\n+----------------------------\n+ 获取鼠标的位置(经纬度)\n+----------------------------\n*/\nMap.prototype.getPosition = function(callback){\n\tvar bounds = this.canvas.getBoundingClientRect();\n\tvar width = this.width;\n\tvar height = this.height;\n\tvar maxLng = this.maxLng; \n\tvar minLng = this.minLng;   \n\tvar maxLat = this.maxLat;\n\tvar minLat = this.minLat;\n\tthis.canvas.addEventListener('mousemove',getLngLat,false);\n\t//触发事件回调\n\tfunction getLngLat(e){\n\t\tvar x = 0,y = 0;\n\t\tvar e = e || window.event;\n\t\tx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - bounds.left + 0.5;\n\t\ty = e.clientY + document.body.scrollTop + document.documentElement.scrollTop - bounds.top+ 1;\n\t\tvar lnglat = Map.xy2LngLat(width, height, x, y, maxLng, minLng, maxLat, minLat);\n\t\tcallback(lnglat);\n\t}\n}\n\n/*\n+----------------------------\n+ 经纬度转屏幕坐标(中心为原点) 静态方法\n+----------------------------\n*/\nMap.lngLat2XY = function(width, height, lng, lat, maxLng, minLng, maxLat, minLat){\n\tvar scaleX = ((maxLng - minLng)*3600) / width; \n\tvar scaleY = ((maxLat - minLat)*3600) / height; \n\tvar midLng = (maxLng + minLng) / 2;//中央经线 x轴中线\n\tvar midLat = (maxLat + minLat) / 2;//中央纬线 y轴中线\n\n\tvar x = (lng - midLng)*3600/scaleX;\n\tvar y = (midLat - lat)*3600/scaleY;\n\treturn {x: x, y: y};\n}\n/*\n+----------------------------\n+ 屏幕坐标转经纬度坐标 静态方法\n+----------------------------\n*/\nMap.xy2LngLat = function(width, height, x, y, maxLng, minLng, maxLat, minLat){\n \tvar scaleX = ((maxLng - minLng)*3600) / width; \n \tvar scaleY = ((maxLat - minLat)*3600) / height; \n \tvar lng = x * scaleX/3600 + minLng;\n \tvar lat = maxLat - y*scaleY/3600; \n \treturn {lng: lng, lat: lat};\n}\n/*\n+-------------------------------------------------------\n+ 点模型(x,y)\n+ 分为两种情况绘制:Point结构和GeoJSON格式\n+-------------------------------------------------------\n*/\nMap.prototype.Point = function(x, y){\n\tthis.x = x;\n\tthis.y = y;\n\tthis.size = 1;\n};\n/*\n+----------------------------\n+ 添加点(按点的结构)\n+----------------------------\n*/\nMap.prototype.addPoint = function(point,style){\n\tvar xy = Map.lngLat2XY(this.width, this.height, point.x, point.y, \n\t\tthis.maxLng, this.minLng, this.maxLat, this.minLat);\n\tvar x = xy.x;\n\tvar y = xy.y;\n\tthis.context.fillStyle = style || \"#E10602\";\n\tthis.context.beginPath();\n\t//改变缩放位置\n\tvar cxy = this.changePosition(x, y, this.zoom);\n\t//画的是红点\n\tthis.context.arc(cxy.x, cxy.y, point.size, 0, Math.PI*2, true);\n\tthis.context.closePath();\n\tthis.context.fill();\n\tvar image = new Image();\n\timage.src = 'images/335.png';\n\t_context = this.context;\n\timage.onload = function(){\n\t\t_context.drawImage(image,cxy.x, cxy.y,15,15);\n\t}\n}\n\nMap.prototype.drawPoint = function(geo_point, style){\n\tvar lnglat = geo_point.geometry.coordinates;\n\tvar point = new this.Point(lnglat[0], lnglat[1]);\n\tthis.addPoint(point, style);\n}\n/*\n+-------------------------------------------------------\n+ 多点模型([[110,32],[118,40]])\n+ 分为两种情况绘制:MultiPoint结构和GeoJSON格式\n+-------------------------------------------------------\n*/\nMap.prototype.MultiPoint = function(pointArr){\n\tthis.pointArr = pointArr;\n}\n/*\n+----------------------------\n+ 添加多点(按多点的结构)\n+----------------------------\n*/\nMap.prototype.addMultiPoint = function(pointArr){\n\tfor(var i = 0; i < pointArr.length; i++){\n\t\tvar point = new this.Point(pointArr[i][0], pointArr[i][1]);\n\t\tthis.addPoint(point);\n\t}\n}\n/*\n+-----------------------------\n+ 绘制多点(按GeoJSON格式)\n\t{\n\t  \"type\": \"Feature\",\n\t  \"geometry\": {\n\t    \"type\": \"MultiPoint\",\n\t    \"coordinates\": [[135.5, 53],[110,34]]\n\t  },\n\t  \"properties\": {\n\t    \"name\": \"XXX\"\n\t  }\n\t}\n+-----------------------------\n*/\nMap.prototype.drawMultiPoint = function(geo_multiPoint){\n\tvar pointArr = geo_multiPoint.geometry.coordinates;\n\tthis.addMultiPoint(pointArr);\n}\n/*\n+-------------------------------------------------------\n+ 线模型(x,y)\n+ 分为两种情况绘制:Line结构和GeoJSON格式\n+-------------------------------------------------------\n*/\nMap.prototype.Line = function(point1, point2){\n\tthis.point1 = point1;\n\tthis.point2 = point2;\n}\n/*\n+----------------------------\n+ 添加线(按线的结构)\n+----------------------------\n*/\nMap.prototype.addLine = function(line, style){\n\t//根据点的个数绘制\n\tif(line.length > 0){\n\t\tvar startPoint = line[0];\n\t\tvar xy1 = Map.lngLat2XY(this.width, this.height, startPoint[0], startPoint[1], \n\t\t\t\t  this.maxLng, this.minLng, this.maxLat, this.minLat);\n\t\tthis.context.strokeStyle = style || \"#006FC4\";\n\t\tthis.context.beginPath();\n\t\tthis.context.lineWidth = 2.5;\n\t\tvar fxy = this.changePosition(xy1.x, xy1.y, this.zoom);\n\t\tthis.context.moveTo(fxy.x, fxy.y);\n\t\tfor(var i = 1; i < line.length; i++){\n\t\t\tvar mxy = Map.lngLat2XY(this.width, this.height, line[i][0], line[i][1], \n\t\t\t\t\t  this.maxLng, this.minLng, this.maxLat, this.minLat);\n\t\t\tvar nxy = this.changePosition(mxy.x, mxy.y, this.zoom);\n\t\t\tthis.context.lineTo(nxy.x, nxy.y);\n\t\t}\n\t\tthis.context.stroke();\n\t}\n}\n/*\n+-----------------------------\n\n+ 绘制多点(按GeoJSON格式\t{\n\t\t\"type\": \"Feature\",\n\t\t\"geometry\": {\n\t\t    \"type\": \"LineString\",\n\t\t    \"coordinates\": [[135.5, 53],[110,34]]\n\t\t},\n\t\t  \"properties\": {\n\t\t    \"name\": \"XXX\"\n\t\t}\n\t}\n+-----------------------------\n*/\nMap.prototype.drawLine = function(geo_line, style){\n\tvar coordinates = geo_line.geometry.coordinates;\n\tthis.addLine(coordinates, style);\n}\n\n/*\n+----------------------------\n+ 添加多边形(按多边形的结构)\n+----------------------------\n*/\nMap.prototype.addPolygon = function(polygon, fillStyle, strokeStyle){\n\tthis.context.fillStyle = fillStyle || '#EEB14A';\n\tthis.context.strokeStyle = strokeStyle || '#D8B1D2';\n\tthis.context.beginPath();\n\t// this.context.lineWidth = 0.5;\n\tif(polygon.length > 0){\n\t\tvar xy1 = Map.lngLat2XY(this.width, this.height, polygon[0][0], polygon[0][1], \n\t\t\t\t  this.maxLng, this.minLng, this.maxLat, this.minLat);\n\t\tvar fxy = this.changePosition(xy1.x, xy1.y, this.zoom);\n\t\tthis.context.moveTo(fxy.x, fxy.y);\n\t}\n\tfor(var i = 1; i < polygon.length; i++){\n\t\tvar mxy = Map.lngLat2XY(this.width, this.height, polygon[i][0], polygon[i][1], \n\t\t\t\t  this.maxLng, this.minLng, this.maxLat, this.minLat);\n\t\tvar nxy = this.changePosition(mxy.x, mxy.y, this.zoom);\n\t\tthis.context.lineTo(nxy.x, nxy.y);\n\t}\n\tthis.context.closePath();\n\tthis.context.fill();//填充省份多边形\n\tthis.context.stroke();//将边界线绘制出来\n}\n\n/*\n+------------------------------------\n+ 绘制多边形(按Geo_JSON格式)\n\t{ \"type\": \"Polygon\",\n\t    \"coordinates\": [\n\t    \t[ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0] ],\n\t    \t[ [100.2, 0.2], [100.8, 0.2], [100.8, 0.8], [100.2, 0.8], [100.2, 0.2] ]\n\t    ]\n    }\n+------------------------------------\n*/\nMap.prototype.drawPolygon = function(geo_polygon, fillStyle, strokeStyle){\n\tvar coordinates = geo_polygon.geometry.coordinates;\n\tthis.addPolygon(coordinates, fillStyle, strokeStyle);\n}\n\n/*\n+----------------------------\n+ 绘制文本\n+----------------------------\n*/\nMap.prototype.addText = function(text, style){\n\tthis.context.font='12px Arial';\n\tthis.context.fillStyle= style ||'#151515';\n\tvar xy = this.changePosition(text.x, text.y, this.zoom);\n\tthis.context.fillText(text.text,xy.x,xy.y);\n}\n/*\n+------------------------------------\n+ 绘制文本(按Geo_JSON格式)\n+------------------------------------\n*/\n\nMap.prototype.drawText = function(feature, style){\n\tvar text = {};\n    //转化坐标\n    var coordinates = feature.geometry.coordinates;\n\tvar xy = Map.lngLat2XY(this.width, this.height, coordinates[0], coordinates[1], \n\t\t\t\t  this.maxLng, this.minLng, this.maxLat, this.minLat);\n\ttext.text = feature.properties.name;\n\ttext.x = xy.x;\n\ttext.y = xy.y;\n\tthis.addText(text, style);\n}\n/*\n+------------------------------------\n+ 改变地图要素的位置(基于屏幕坐标)\n+------------------------------------\n*/\nMap.prototype.changePosition = function(x, y, zoom){\n\treturn {\n\t\tx: x * (zoom / 100),\n\t\ty: y * (zoom / 100)\n\t};\n}\n/*\n+------------------------------------\n+ 基于要素的缩放\n+------------------------------------\n*/\nMap.prototype.zoomTo = function(zoom){\n\t//重绘之前清除视野\n\tthis.context.clearRect(-(this.width/2), -(this.height/2), this.width, this.height);\n\tthis.zoom = zoom;\n\tthis.showMap(map); //绘制地图\n}\n/*\n+------------------------------------\n+ 左移\n+------------------------------------\n*/\nMap.prototype.moveToLeft = function(x, y, offsetLeft){\n\treturn {\n\t\tx: x - offsetLeft,\n\t\ty: y\n\t}\n}\n/*\n+------------------------------------\n+ 右移\n+------------------------------------\n*/\nMap.prototype.moveToRight = function(x, y, offsetRight){\n\treturn {\n\t\tx: x + offsetRight,\n\t\ty: y\n\t}\n}\n/*\n+------------------------------------\n+ 平移(根据鼠标的按下事件移动)\n+------------------------------------\n*/\nMap.prototype.panTo = function(e){\n\t//(1)获取鼠标按下的起点\n\t//(2)获取鼠标弹起的终点\n\t//(3)计算两个点间的偏移\n\tvar startPoint = {};\n\tvar endPoint = {};\n\tthis.canvas.addEventListener('mousedown', function(e){\n\t\tvar e = e || window.event;\n\t\tx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - bounds.left + 0.5;\n\t\ty = e.clientY + document.body.scrollTop + document.documentElement.scrollTop - bounds.top+ 1;\n\n\t}, false);\n\n\tthis.canvas.addEventListener('mouseup', function(e){\n\t\tvar e = e || window.event;\n\t\tx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - bounds.left + 0.5;\n\t\ty = e.clientY + document.body.scrollTop + document.documentElement.scrollTop - bounds.top+ 1;\n\n\t}, false);\n}\n\n\n/*\n+------------------------------------\n+ 基于鼠标滚轮、双击缩放\n+------------------------------------\n*/\nMap.prototype.zoomToEvent = function(){\n\tvar _this = this; //接收当前的this对象\n\tvar currentZoom = this.zoom;\n\tvar scorll = 0;\n\t//滚轮 \n\tthis.canvas.addEventListener('mousewheel', getScorll, false);\n\t// 捕获鼠标动作\n\tfunction getScorll(e){\n\t\tscorll += e.wheelDelta;\n\t\t//除以120，计算缩放级数\n\t\t//每次缩放0.1\n\t\tvar zoom = currentZoom + (scorll / 120) * 100 * 0.1;\n\t\tif(zoom < 0){\n\t\t\tzoom = 0;\n\t\t}\n\t\t_this.zoomTo(zoom); \n\t}\n\n\t//双击\n\tthis.canvas.addEventListener('dblclick', function(){\n\t\tscorll += 10;\n\t\t//除以120，计算缩放级数\n\t\t//每次缩放0.1\n\t\tvar zoom = currentZoom + scorll;\n\t\t_this.zoomTo(zoom); \n\t}, false);\n}\n\n/*\n+------------------------------------\n+ 要素渲染样式\n+------------------------------------\n*/\nMap.prototype.getStyle = function(type){\n\tswitch(type){\n\t\tcase'lvdi':\n\t\t\treturn {\n\t\t\t\tfillStyle: '#C2E0B9',\n\t\t\t\tstrokeStyle: '#C2E0B9'\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'shuiyu':\n\t\t\treturn {\n\t\t\t\tfillStyle: '#ACC5E9',\n\t\t\t\tstrokeStyle: '#ACC5E9'\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'gandao': \n\t\t\treturn {\n\t\t\t\tfillStyle: '#FFC65C',\n\t\t\t\tstrokeStyle: '#EEA62B'\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'zhilu': \n\t\t\treturn {\n\t\t\t\tfillStyle: '#FFFDB5',\n\t\t\t\tstrokeStyle: '#E8DDC2'\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'ditie': \n\t\t    return {\n\t\t    \tstroke: '#16A9DC'\n\t\t    };\n\t\t\tbreak;\n\t\tcase 'beijing': \n\t\t    return {\n\t\t    \tfillStyle: '#F5F3EF'\n\t\t    };\n\t\t\tbreak;\n\t\tcase 'diming': \n\t\t    return {\n\t\t    \tfillStyle: '#568FE3',\n\t\t    \tfont_color: '#FAFAFA'\n\t\t    };\n\t\t    break;\n\t\tcase 'xiaolu':\n\t\t\treturn {\n\t\t\t\tfillStyle: '#FFFFFF',\n\t\t\t\tstrokeStyle: '#EFEDE7'\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'jianzhu':\n\t\t\treturn {\n\t\t\t\tfillStyle: '#F8F7F3',\n\t\t\t\tstrokeStyle: '#E6E5E2'\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\tfillStyle: 'NULL',\n\t\t\t\tstrokeStyle: 'NULL'\n\t\t\t};\n\t\t\tbreak;\n\t}\n}\n\n\n\n\n\n\n"]}